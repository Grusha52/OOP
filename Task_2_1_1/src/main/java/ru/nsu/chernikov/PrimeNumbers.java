package ru.nsu.chernikov;

import java.util.ArrayList;
import java.util.Arrays;

public class PrimeNumbers{

    public static boolean isPrime(int n) {
        if (n <= 1) {
            return false;
        }

        for (int d = 2; d < n; d++){
            if (n % d == 0) {
                return false;
            }
        }
        return true;
    }


    public static boolean parallel(ArrayList<Integer> mas) {
        for (int num : mas) {
            if (!isPrime(num)) {
                return true;
            }
        }
        return false;
    }


    public static void main(String[] args) {
       ArrayList<Integer> numbers = new ArrayList<>(Arrays.asList(20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053,20319251, 6997901, 6997927, 6997937, 17858849, 6997967,
               6998009, 6998029, 6998039, 20165149, 6998051, 6998053));
        long startTime = System.currentTimeMillis();
        boolean result = PrimeNumbers.parallel(numbers);
        long endTime = System.currentTimeMillis();
        System.out.println(result);
        System.out.println(endTime - startTime);
    }
}